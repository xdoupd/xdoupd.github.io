<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xdoupd</title>
  
  <subtitle>一个交互设计师的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xdoupd.github.io/"/>
  <updated>2017-12-09T10:23:28.691Z</updated>
  <id>http://xdoupd.github.io/</id>
  
  <author>
    <name>SHENGZHAO</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>结合ICONFONT,建立AXURE常用矢量图标部件库</title>
    <link href="http://xdoupd.github.io/2017/12/09/Iconlibrary/"/>
    <id>http://xdoupd.github.io/2017/12/09/Iconlibrary/</id>
    <published>2017-12-09T09:36:28.000Z</published>
    <updated>2017-12-09T10:23:28.691Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://on20y2b5s.bkt.clouddn.com/%E5%B0%81%E9%9D%A2.jpg" alt=""><br>AXURE RP 8.1新增了SVG格式转形状的功能，这么一个小功能却能带来很大的效率提升，结合ICONFONT，通过这个功能我们可以建立起自己的常用矢量图标库；<br><a id="more"></a></p><p>在平时的原型设计过程中，为了能够让设计的原型更能表达我们的设计意图，提高设计评审的效率，常常需要在原型设计中使用切合场景的ICON，一般的做法是在ICONFONT上搜索想要的ICON，然后添加到原型中，这也是我之前比较常用的一种方式，但这种方式存在一个缺点就是效率很低，而且建立起自己的图标库会很困难，而8.1版本新增的SVG格式转形状的功能能够帮我们建立一个规范的高效的图标部件库。</p><h3 id="1-在ICONFONT上将比较常用的图标加入购物车"><a href="#1-在ICONFONT上将比较常用的图标加入购物车" class="headerlink" title="1 在ICONFONT上将比较常用的图标加入购物车"></a>1 在ICONFONT上将比较常用的图标加入购物车</h3><p>ICONFONT提供了一个购物车的功能，可以方便我们对想要的图标进行批量操作<br><img src="http://on20y2b5s.bkt.clouddn.com/iconfont%E6%88%AA%E5%9B%BE" alt=""></p><p>这里选择下载SVG格式，颜色建议选取灰色。</p><h3 id="2-创建AXURE部件库"><a href="#2-创建AXURE部件库" class="headerlink" title="2 创建AXURE部件库"></a>2 创建AXURE部件库</h3><p>新建一个AXURE部件库文件，将下载下来的SVG图标，逐个添加进部件库，通过右侧属性栏“转换SVG图片为形状”，这里我们给部件库设置了一个尺寸大小的规范：30x30，然后将每一个转换为形状的图标放置在这个尺寸规范中。<br><img src="http://on20y2b5s.bkt.clouddn.com/WX20171209-175455@2x.png" alt=""></p><h3 id="3-优化搜索，提供检索效率"><a href="#3-优化搜索，提供检索效率" class="headerlink" title="3 优化搜索，提供检索效率"></a>3 优化搜索，提供检索效率</h3><p>AXURE中的部件库是通过名称关键词搜索的，所以在图标库个数达到一定数量后，会遇到查找效率低的问题，所以这里我们事先给每一个图标添加尽可能相关的关键词名称，以优化搜索<br><img src="http://on20y2b5s.bkt.clouddn.com/WX20171209-175820@2x.png" alt=""></p><h3 id="4-载入部件库"><a href="#4-载入部件库" class="headerlink" title="4 载入部件库"></a>4 载入部件库</h3><p>最后将制作好的部件库载入，便可使用了。初期的部件库可能不会很完善，还需要我们这以后的原型设计中，多多的补充完善，这样逐步建立起适合自己的顺手的高效图标组件库</p><p><img src="http://on20y2b5s.bkt.clouddn.com/WX20171209-180116@2x.png" alt=""></p><h3 id="使用演示视频"><a href="#使用演示视频" class="headerlink" title="使用演示视频"></a>使用演示视频</h3><iframe height="500" width="1000" src="http://on20y2b5s.bkt.clouddn.com/QQ20171209-181459-HD.mp4" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://on20y2b5s.bkt.clouddn.com/%E5%B0%81%E9%9D%A2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;AXURE RP 8.1新增了SVG格式转形状的功能，这么一个小功能却能带来很大的效率提升，结合ICONFONT，通过这个功能我们可以建立起自己的常用矢量图标库；&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读《Web界面设计》·上</title>
    <link href="http://xdoupd.github.io/2017/08/25/webdesign/"/>
    <id>http://xdoupd.github.io/2017/08/25/webdesign/</id>
    <published>2017-08-25T09:06:56.000Z</published>
    <updated>2017-08-31T03:07:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="webdesign/01.jpg" alt="01"></p><p>“例糙理不糙”<br><a id="more"></a></p><p>前几天在部门里做了一次分享，分享的内容是关于读过的一本书《web界面设计》，这是一本不算新的书，书里对于一些知识举的举例也还都是雅虎时代的例子，但俗话说的好：例糙理不糙，作者对于交互模式的总结、分析和解读在当下也被许多大企业借鉴，比如蚂蚁的ANTD部分设计原则就是基于此书，所以总的来说，这是一本可以一读的书。目前网上应该是买不到此书了，我托朋友从学校图书馆里借阅了一本，用了一段时间阅读，这类书说实话，确实枯燥，不过对于从事交互设计的同学来说，应该说可以作为一本基础必读书目来看。</p><p>以下读书笔记：</p><p>全篇字数：10496字<br>阅读需用：20min</p><h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>《web界面设计》是由两位作者 Bill Scott和Theresa Neil两位30多年web设计所总结出来的经验和最佳实践。</p><blockquote><p><strong>原理：</strong>（拉丁语：principium，法语：principe，德语：Prinzip，英语：principle）、原则或定律，是<strong>存在于某个系统中的一组法律、规则与基本前提</strong>。这个体系中的其他事物，大体上都可以经由这个基本规律来推导、解释与预测；<strong>这个体系中的成员，都应该遵守这个基本规律，在这套规则下运作</strong>。经由了解这个体系的原理，可以了解到整个体系的基本特征，或是反映出这个体系被设计的目的。如果这个体系下的某个原理被忽略，可能造成体系无法运作，或是这个行为将无法达成其目的。-wiki百科</p><p><strong>模式</strong>：…当遇到某个反复出现的问题时，就相应解决方案的核心内容给出的描述…<br><strong>设计模式</strong>：在软件工程中，对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案。这个属于是由埃里希·伽玛等人在1990年代从建筑设计领域引入到计算机科学的。-wiki百科</p></blockquote><p>本次分享的内容就是web交互设计的模式，以及这些模式所依托的由作者总结出来的6个设计原理。</p><p><strong>直截了当   简化交互   足不出户   提供邀请   使用变换   即时反应</strong></p><p>这6个设计原理也是目前比较被大家认可的AntDesign所依托的设计原理，所以我们这里也同样结合Antdesign来看。</p><p>Antdesign所依托的设计原理一共10个，前四个出自《写给大家看的设计书》、后6个即出自《web界面设计》</p><h2 id="直截了当"><a href="#直截了当" class="headerlink" title="直截了当"></a>直截了当</h2><p>需要在哪里输入，就要允许在哪里输出。不要为了编辑内容而打开另一个页面，应该直接在上下文中实现编辑。目的是能更直接的相应用户的操作。</p><p>Axure和Sketch的目录编辑交互模式就符合这个原理，输入及输出，所见即所得，没有经过任何其他的页面过度，在此原理下，我们来介绍三种常见的交互模式：<strong>页内编辑、利于拖放、直接选择</strong></p><h3 id="页内编辑"><a href="#页内编辑" class="headerlink" title="页内编辑"></a>页内编辑</h3><p>故名思意就是在当前页内完成编辑操作，不用跳转到其他页面。包含了：<strong>单字段行内编辑、多字段行内编辑、覆盖层编辑</strong>、群组编辑、表格编辑、模块配置</p><h5 id="单字段行内编辑"><a href="#单字段行内编辑" class="headerlink" title="单字段行内编辑"></a>单字段行内编辑</h5><ul><li>这里举知乎编辑个人资料的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/zhihu01.gif" alt="知乎编辑个人资料"></p><p>单字段行内编辑  就是在行内编辑一个文本字段，是最简单的行内编辑形式，这种交互发生在原地而不是单独的窗口或者单独的页面。营造所见即所得的状态。</p><p>设计这个模式的时候，要考虑到两个要素：<strong>易读性和易编辑性</strong></p><p>我们来看两个例子：</p><p><img src="webdesign/02.jpeg" alt="02"><br>什么时候选用方案1、什么时候选用方案2 ？<br>方案1的优点是易读性较好，因为页面中没有干扰内容本身的其他元素，缺点是编辑模式的易发现性较差，因为要通过鼠标移动到字段上面才能发现编辑模式；方案2的优缺点刚好是相反，所以当易读性比易发现性重要时，选用方案1，反之，则选择方案2。</p><h5 id="多字段行内编辑"><a href="#多字段行内编辑" class="headerlink" title="多字段行内编辑"></a>多字段行内编辑</h5><p>多字段行内编辑，常见于表格的一行多字段编辑</p><p>1 视觉割裂感  </p><p><img src="webdesign/03.jpeg" alt="03"></p><p>显示模式和编辑模式模式之间往往需要不同大小的页面空间和布局，也会使用不同类型和数量的控件，因此显示模式和编辑模式之间就可能造成用户视觉上的割裂感。</p><p>解决这种视觉割裂感有两种方式：1 保证显示模式在切换到编辑模式的时候，显示模式的元素位置不动，如下图；2 利用动画的方式，来缓解这种割裂感，一般为淡出和淡入。（这个在后面的巧用过过渡的原理里也会提到）</p><p>这两种模式都是在页面内实现编辑，这样的好处是可以不脱离上下文。但有时我们会遇到很复杂的编辑模式，比如我们要通过日期选择控件，重新选择一个入住日期，那要在当前页面内完成的话，且不影响上下文，那就需要把下面的“酒店和关键词 以及搜索，下移，来给这个控件腾出位置” 这样会损坏页面的整体感，这时就可以采用覆盖层来实现，这样虽然会遮挡上下文中的一些元素，不过这些元素对编辑并不显得那么重要</p><p><img src="webdesign/04.jpeg" alt="04"></p><h5 id="覆盖层编辑"><a href="#覆盖层编辑" class="headerlink" title="覆盖层编辑"></a>覆盖层编辑</h5><p>使用覆盖层编辑时，应尽量使用最轻量的样式，以减少显示和编辑模式切换造成的干扰。覆盖层编辑一般为一些特殊控件：如日历控件、日期选择控件等。</p><h5 id="群组编辑"><a href="#群组编辑" class="headerlink" title="群组编辑"></a>群组编辑</h5><p>群组编辑这个最经典的例子莫过于iPhone的长按图标由正常显示模式进入编辑模式，但iPhone的这种编辑模式初次使用不易被发现，有一定的学习成本，我们平时也会遇到很多群组编辑的例子，比如刚刚说到的QQ个人资料卡的编辑.<br><img src="webdesign/05.png" alt="05"></p><p>这里我们要提到另一个原则叫 对称性交互原则；<br><strong>对称性交互原则</strong>：进入和退出编辑模式通常应该同样的交互风格，这样有助于发现相反的操作。<br>我们看iPhone的例子 其实是不符合对称性交互原则的，因为它进入编辑模式是通过长按，而退出编辑模式是通过按home键，这种交互是不对称的，那按照对称性交互原则，编辑模式下，长按图标应该也会退出编辑模式，那苹果为什么没这么做的原因，是因为它把按压home键设计成了系统级的返回桌面的交互操作，而这个方式在用户的使用中也逐渐成为操作习惯。我们再看QQ的个人资料卡，其实是个很好的遵循了对称性交互原则，它进入编辑模式和退出编辑模式的交互位置和方式是相同的，这样就很大程度的降低了用户的认知成本；平时也会遇到很多的对称性交互原则的例子：<br>比如：Axure的目录编辑，用户能进行行内编辑，所见即所得，输入输出保持了高度一致。</p><h3 id="拖放"><a href="#拖放" class="headerlink" title="拖放"></a>拖放</h3><p>拖放操作，在Antdesign里给了两个示例：1 拖放列表  2 拖放图片/文件<br>但其实我们平时使用计算机的过程中会发现很多其他的拖放的身影：</p><h5 id="拖放模块："><a href="#拖放模块：" class="headerlink" title="拖放模块："></a>拖放模块：</h5><p>重新排列页面上的模块，注意鼠标移动到画板上的交互邀请，以及拖动画板离开原位置的虚线框和触发第二块画板自动填充第一个虚线框后留下的攻被拖放花瓣放置的虚线框，这其实也是一种邀请，这里我们讨论一个问题：到底以哪个位置来确定拖动模块的。</p><ul><li>这里举花瓣网拖放画板的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/%E8%8A%B1%E7%93%A3.gif" alt="花瓣网拖放画板"></p><p><img src="webdesign/06 拖放演示.001.jpeg" alt="拖放演示"></p><h5 id="拖放列表："><a href="#拖放列表：" class="headerlink" title="拖放列表："></a>拖放列表：</h5><p>重新排列列表项的顺序，这里也要注意一些交互邀请。</p><ul><li>这里举滴答清单的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/%E6%BB%B4%E7%AD%94.gif" alt="滴答清单拖放列表"></p><h5 id="拖放对象："><a href="#拖放对象：" class="headerlink" title="拖放对象："></a>拖放对象：</h5><p>改变对象间的从属关系，拖放目录到被放置目录上的交互瞬间，解释层级关系的改变。Axure采用的是插入条，道理相同，Google Drive没采用目录拖放邀请的原型可能是目录的拖放操作已经培养成用户喜欢，或者是用户想去改变目录结构的时候，给予他正确的反馈。</p><ul><li>这里举google drive和Axure的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/google%E4%BA%91%E7%AB%AF%E7%A1%AC%E7%9B%98%E6%8B%96%E6%94%BE%E6%93%8D%E4%BD%9C.gif" alt="Google云端硬盘拖放目录"></p><h5 id="拖放操作："><a href="#拖放操作：" class="headerlink" title="拖放操作："></a>拖放操作：</h5><p>在被放置的对象上执行操作</p><ul><li>这里举拖放上传的例子，还有QQ拖放文件的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/QQ%E6%8B%96%E6%94%BE.gif" alt="QQ拖放文件"></p><h5 id="拖放集合："><a href="#拖放集合：" class="headerlink" title="拖放集合："></a>拖放集合：</h5><p>书中举例是拖放商品列表到购物车，然后在购物车集合结算，这种交互在国内几大电商平台都没有，从产品策略上也不相符，所以这里举一个不太恰当的例子，拖放网页图片到eagle。</p><p><img src="http://on20y2b5s.bkt.clouddn.com/eagle.gif" alt=""></p><h3 id="直接选择"><a href="#直接选择" class="headerlink" title="直接选择"></a>直接选择</h3><p>就是允许用户选择对象，然后为对象应用操作。我们平时工作比较常见的几种选择模式：</p><h5 id="切换选择："><a href="#切换选择：" class="headerlink" title="切换选择："></a>切换选择：</h5><p>基于复选框的选择</p><h5 id="集合选择："><a href="#集合选择：" class="headerlink" title="集合选择："></a>集合选择：</h5><p>跨越多页的选择</p><h5 id="对象选择："><a href="#对象选择：" class="headerlink" title="对象选择："></a>对象选择：</h5><p>直接选择对象<br>我这里举一个例子，大家就知道这三种选择模式分别代表什么了</p><p><img src="webdesign/07.jpeg" alt="QQ给讨论组添加对象"></p><p>这里举QQ给讨论组添加人的例子<br>左上是对象选择 、右上是切换选择、下面是集合选择</p><p>我们现在通过三个邮箱客户端来分别对比一下这三种选择：QQ邮箱、Gmail、科大讯飞的邮箱</p><p><img src="webdesign/08.jpg" alt="三个邮箱的对比"></p><p>对于切换选择和对象选择，这三个系统方式都是相同的，通过切换选择复选框来选择多项，对象选择是打开邮件，这里面我们来看这三个系统在选择全部集合选择上差异：<br>QQ邮是提供一个全选复选框+选择当前页还是选择全部提示；<br>G邮是提供一个全选复选框+选择当前页还是选择全部提示+全选复选框下拉提示；<br>IF邮是提供一个全选复选框+全选复选框下拉提示；<br>下拉是一个不易被发现的交互模式，所以IF邮是三个系统里 集合选择模式上做的最不好的。</p><h2 id="简化交互"><a href="#简化交互" class="headerlink" title="简化交互"></a>简化交互</h2><p>简单点理解就是让用户执行某个操作时更容易，这里引用费茨法则，如果用户鼠标移动距离越少、对象相对目标越大，那么用户越容易操作。这个法则其实很好理解。球门越大，越容易踢进去，距离球门越近，越容易踢进去。</p><p>我们首先来看产品：桌面客户端产品、GOOGLE、QQ邮箱</p><p>桌面客户端型产品例如：Word，它的内容区和功能菜单是完全分开的两个区域，用户要么先选择一种工具，要么先选择一些内容对象，然后再用相应的工具来操作数据。<br>（这里我要推荐下Markdown，最近已经完全爱上这种编辑模式，有兴趣的体验就就知道了）<br>早起网站如Google等则是完全以内容为中心，简单的浏览或链接到其他的页面，用不到太多的工具，而随着web的成熟，越来越多内容和功能混合的站点涌现，就如同邮箱系统一样。</p><p>那当前的话题就是要考量这种站点的用户界面要如何设计？</p><p>我们前面说到费茨法则，距离越近，目标越大操作越容易，那这个近到底近到什么程度才能算近呢，iPhone的用户界面给了我们答案，内容即界面，无需划分功能区，每个对象都可以直接操作。</p><p>怎样才能使功能更贴近内容，从而简化交互呢？<br>这里我们提出一个名词叫<strong>上下文工具</strong></p><h3 id="上下文工具"><a href="#上下文工具" class="headerlink" title="上下文工具"></a>上下文工具</h3><p>上下文功能其实你可以理解为桌面右键菜单的web版。不过并不是让用户通过右键显示菜单，而是可以通过内容在上下文中显示相关工具</p><p>我们首先能想到的第一点是不是把重要的操作直接放到界面中，并实时可见。</p><h5 id="实时可见工具："><a href="#实时可见工具：" class="headerlink" title="实时可见工具："></a>实时可见工具：</h5><p>把上下文工具直接显示在内容中</p><ul><li>这里举知乎的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/%E7%9F%A5%E4%B9%8E-%E5%AE%9E%E6%97%B6%E6%98%BE%E7%A4%BA%E5%B7%A5%E5%85%B7.gif" alt="知乎点赞"></p><p>这里为什么不把赞同/不赞同 隐藏起来，等到鼠标悬停再出现呢，因为这个功能是知乎这个网站的一个核心功能，必须始终显示以明确邀请用户参与。</p><p>实时可见工具的一个最大的好处就是易发现性，但是在另一方面也会导致页面看起来比较混乱，那我们来看看一些知名的web站点是怎么处理的？</p><ul><li>这里举QQ邮箱、Gmail、163邮箱的例子</li></ul><p><img src="webdesign/09.jpg" alt="三个邮箱的对比"></p><p>这里主要对比三个系统的加星标操作的差异</p><p>星标的位置和重要程度的不同，可能是考虑到用户群体的差异，Gmail和163面向的商务群体比较多，星标邮件对于这类群体来说是个很重要的功能，所以将其提至页面视觉的前部，而QQ邮箱面向的群体可能偏学生多一点，所以星标邮件功能就不是那么重要的功能，所以放在视觉末端去显示（个人观点，欢迎辟谣）</p><p>这里补充一点几个邮箱的差异：Q邮和163的菜单（删除操作等）是实时显示的，而Gmail采用的是选择后出现，孰优孰劣，也要视业务场景和用户群体特征去判断，单从内容和交互体验来看，Gmail的方式 我比较喜欢。</p><h5 id="悬停即现工具"><a href="#悬停即现工具" class="headerlink" title="悬停即现工具"></a>悬停即现工具</h5><p>如果某个操作不那么重要，或者使用『实时可见工具』过于啰嗦会影响用户阅读时，可以在悬停在该对象上时展示操作项。<br>这个大家再熟悉不过了，这样做的目的是为了减少视觉干扰，将非主要操作先隐藏起来，按需出现。</p><ul><li>这里举百度网盘和Google Drive的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98%20%E6%82%AC%E5%81%9C%E5%8D%B3%E7%8E%B0.gif" alt=""></p><p><img src="webdesign/10.png" alt="三个邮箱的对比"></p><p>分析百度网盘悬停即现 下载 分享快捷操作，而Google Drive没有采取悬停即现的原因。<br>我感觉可能是可因为国内外对网盘的使用习惯不同，国内限于在线网速的限制。（这个不确定答案，个人猜测）</p><h5 id="开关显示工具"><a href="#开关显示工具" class="headerlink" title="开关显示工具"></a>开关显示工具</h5><p>这种模式也很常见，如果操作并不是主要目的，但又想用户直接操作界面来提供方面，可以通过开关来实现，某些操作只需要在特定模式时显示。</p><ul><li>这里举QQ个人资料卡的例子</li></ul><p><img src="http://on20y2b5s.bkt.clouddn.com/QQ%E4%B8%AA%E4%BA%BA%E8%B5%84%E6%96%99%E5%8D%A1%20%E7%BC%96%E8%BE%91.gif" alt=""></p><p>这里QQ个人资料卡 是个反例，虽然保证了编辑和完成编辑交互的对称，但两个模式的切换却出现了页面元素的晃动。</p><h5 id="级联递进工具"><a href="#级联递进工具" class="headerlink" title="级联递进工具"></a>级联递进工具</h5><p>首先拿Gmail举级联递进的例子，说明级联递进是什么意思。</p><ul><li>这里是Gmail级联递进的图</li></ul><p><img src="webdesign/11.png" alt="google云端硬盘"></p><p>下面对比QQ邮箱和百度网盘还有Gmail的例子，选中某一个对象后，才出现相应的操作和相应的操作一直显示的差异。<br>在可能的情况下，应尽量避免级联，因为为了使用下一级菜单而执行过多的鼠标操作，很容易让用户反感。比如我们平时做文件管理时候的文件夹套文件夹</p><h5 id="二级菜单（这个不做分享，很少碰到）"><a href="#二级菜单（这个不做分享，很少碰到）" class="headerlink" title="二级菜单（这个不做分享，很少碰到）"></a>二级菜单（这个不做分享，很少碰到）</h5><p>二级菜单就相当于桌面程序的右键菜单，当然也不局限于右键，MAC在DOCK上按住鼠标1秒钟也会呼出菜单，但在web中要慎重使用，因为二级菜单以前在web上并不常见，主要原因是因为会和浏览器的右键菜单冲突，所以用户这种操作习惯并没有被培养出来，所以在使用二级菜单的时候，应该是把一些替代性命令或者快捷方式放在其中，比如Google Maps/百度地图的路线右键菜单。</p><h5 id="交互中的工具"><a href="#交互中的工具" class="headerlink" title="交互中的工具"></a>交互中的工具</h5><p>如果操作不重要或者可以通过其他途径完成时，可以将工具放置在用户的操作流程中，减少界面元素，降低认知负担，给用户小惊喜。</p><ul><li>这里对比Antdesign和QQ个人资料卡 复制QQ号的优劣</li></ul><p><img src="webdesign/12.jpg" alt="交互中的工具"></p><p>首先用户想复制一个东西，他首先想到的是系统级的复制，即选中数字 右键复制，当用户在执行这个意图的过程中，你通过一些动态邀请，提供给了用户一个更快捷的操作，会增加用户对产品的喜爱。而QQ这里的快捷操作，在首次使用时 是有一定的认知门槛的，用户如果执行传统的复制操作，则不会发现此功能，所以在传统的用户心智模型的基础上，Antdesign的设计方式要更优一点，因为用户的心智模型弥补了不易发现性。</p><h5 id="可视区域≠可点击区域"><a href="#可视区域≠可点击区域" class="headerlink" title="可视区域≠可点击区域"></a>可视区域≠可点击区域</h5><p>这个其实就是扩大可点击视觉原色的可点击区域，以此来简化交互，遵循的费茨法则。</p><h2 id="足不出户"><a href="#足不出户" class="headerlink" title="足不出户"></a>足不出户</h2><p>能在这个页面解决的问题，就不要去其它页面解决，因为任何页面刷新和跳转都会引起变化视盲（Change Blindness），导致用户心流（Flow）被打断。频繁的页面刷新和跳转，就像在看戏时，演员说完一行台词就安排一次谢幕一样。</p><p>这里说到两个词：心流和变化视盲。</p><blockquote><p>变换盲视（Change Blindness） ：指视觉场景中的某些变化并未被观察者注意到的心理现象。产生这种现象的原因包括场景中的障碍物，眼球运动、地点的变化，或者是缺乏注意力等。——摘自《维基百科》<br>心流（Flow） ：也有别名以化境 (Zone) 表示，亦有人翻译为神驰状态，定义是一种将个人精神力完全投注在某种活动上的感觉；心流产生时同时会有高度的兴奋及充实感。——摘自《维基百科》</p></blockquote><p>运动员要去培养快速进入心流的能力。</p><p>其实通俗一点讲就是：能在这个页面解决的问题，就不要去其它页面解决，以此能创造连续视觉感知的心流境界，其实就一个词：视觉连续性</p><p>那为达到这种视觉连续性，避免页面的跳转，有4中我们常见的模式：<br><strong>覆盖层、嵌入层、虚拟页面、流程处理</strong></p><h3 id="覆盖层"><a href="#覆盖层" class="headerlink" title="覆盖层"></a>覆盖层</h3><p>覆盖层大家再熟悉不过，覆盖层的好处：</p><ol><li>轻量  不占资源、显示速度快</li><li>覆盖层由web控制而不是浏览器控制，这样设计人员就可以从外观上使覆盖层与界面很好的融为一体。<br>我们平时遇到的覆盖层有：对话框覆盖层、详情覆盖层、输入覆盖层</li></ol><h5 id="对话框覆盖层"><a href="#对话框覆盖层" class="headerlink" title="对话框覆盖层"></a>对话框覆盖层</h5><p>先举例：模态覆盖层和非模态覆盖层<br>模态覆盖层就是你必须要和当前的覆盖层进行交互 才能返回应用程序；<br>非模态则是允许用户在不处理对话框的情况下 可以操作页面被的其他内容。</p><p>我们从一个简单的操作：删除  来看这两者的区别和应用场景：</p><p>印象笔记的 删除 ，在删除笔记时，用户是需要通过右键 选择删除操作的，完成这个操作，用户需要付出一定操作成本，所以这里不需要确认删除的对话框。那我们再看印象笔记删除笔记本的操作，这里印象笔记弹出了一个确认删除的对话框是为什么？因为删除一个笔记本对用户造成的损失要远远大于一个删除一个笔记带来的损失，所以这里会有二次确认。</p><p>我们再看淘宝购物车的删除，这里淘宝使用了一个模态的确认弹窗，为啥？<br>因为你购物车里的东西，会极大可能转化为交易，所以淘宝当然希望你不删除购物车里的东西了，这是业务层面的考虑。</p><p>像删除这种操作的二次确认的对话框，应该勇敢的让用户去尝试，给用户撤销的机会，当执行某些无法撤销的操作时，可以使用轻量级的非模态弹窗，应尽量避免使用模态的二次确认弹窗。<br><a href="https://ant.design/docs/spec/stay-cn" target="_blank" rel="noopener">Antdesign</a>给我们举了很不错的示例：</p><p><img src="webdesign/13.jpg" alt="对话框覆盖层"></p><h5 id="输入覆盖层"><a href="#输入覆盖层" class="headerlink" title="输入覆盖层"></a>输入覆盖层</h5><p>在覆盖层上，让用户直接进行少量字段的输入。<br>这个一般用于表格或列表的名称修改比较多，用户可以直接通过一个小的气泡输入覆盖层，来修改编辑信息，而不是弹出一个带有亮盒效果的对话框覆盖层</p><p><img src="webdesign/14.png" alt="输入覆盖层"></p><h5 id="详情覆盖层"><a href="#详情覆盖层" class="headerlink" title="详情覆盖层"></a>详情覆盖层</h5><p>一般在列表中，通过用户『悬停』/『点击』某个区块，在当前页加载该条列表项的更多详情信息。<br>这里我们再对比QQ邮箱、163邮箱、Gmail、科大讯飞邮箱、阿里企业邮箱，前四者均为点击邮件跳转新页面查看详情，而阿里企业邮则是在右侧滑出一个覆盖层用以显示邮件详情。这样的好处显而易见，可以在显示部分邮件列表内容的情况下，快速切换查看邮件，且不用离开当前页面；</p><p><img src="http://on20y2b5s.bkt.clouddn.com/%E9%98%BF%E9%87%8C%E4%BA%91%E9%82%AE.gif" alt="阿里企业邮"></p><p>详情覆盖层的例子还有很多，比如豆瓣的电影详情，鼠标悬停在电影海报上 0.5s会弹出一个详情页，以便用户快速查看影片信息，这里的重点是0.5的悬停延时，如果没有这0.5s的悬停延时，要么用户无法发现详情覆盖层，要么就是页面会显得特别闹腾。</p><p><img src="webdesign/15.png" alt="详情覆盖层"></p><h3 id="嵌入层"><a href="#嵌入层" class="headerlink" title="嵌入层"></a>嵌入层</h3><p>顾名思义 就是将信息直接嵌在页面中，平时比较常见的就是列表嵌入层、详情嵌入层和标签页</p><h5 id="列表嵌入层"><a href="#列表嵌入层" class="headerlink" title="列表嵌入层"></a>列表嵌入层</h5><p>在列表中，显示某条列表项的详情信息，保持上下文不中断。</p><p><img src="http://on20y2b5s.bkt.clouddn.com/QQ%E8%AE%A2%E9%98%85%E9%98%85%E8%AF%BB.gif" alt="QQ订阅阅读"></p><p>使用列表嵌入层时，应保证嵌入层的内容高度不要太高，否则会影响体验。<br>以上为什么QQ阅读订阅的嵌入层展开内容高度很多，却还要采用嵌入层的模式，因为QQ阅读列表提供的内容已经相对来说比较丰富，用户可以判断是不是对内容感兴趣才会打开，这时候阅读的视觉连续性就比较重要，但是也要考虑到用户误触等非意愿打开的情况，这时我们在交互上要做的就是 提供一种简单快速的关闭打开模式的交互，这里我认为QQ订阅列表的关闭列表的交互热区应该可以考虑适当扩大一点，按照费茨法则，这样可以简化交互，给用户带来方便。</p><h5 id="详情嵌入层"><a href="#详情嵌入层" class="headerlink" title="详情嵌入层"></a>详情嵌入层</h5><p>顾名思义就是把内容详情直接嵌入页面中，和前面提到的详情覆盖层类似，使用详情嵌入层也要考虑到内容信息的多少。下面我们来看一个例子：</p><p><img src="webdesign/16.png" alt="安居客房子列表"></p><p>安居客房子信息列表的页面，其实可以将房子的照片等能促使用户对房子发生兴趣的因为嵌入到当前页面中，以方便用户快速的对房子有个大体的印象。</p><p>有时候我们可以使用详情嵌入层在上下文中显示详细信息，且不会遮挡其他信息。</p><h5 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h5><p>这个大家再熟悉不过，将多个平级的信息进行整理和分类了，一次只显示一组信息。<br>这里需要注意的是，通常情况下 是使用鼠标单击来切换标签，当几个标签页内容同样都很重要的时候，通过悬停切换。<br>尽量避免在同一个页面中使用多组标签页，如果无法避免，那就讲次级的标签页样式在视觉上设计的更轻量化。</p><p><img src="webdesign/17.png" alt="淘宝商品评价的二层tab页"></p><p>一般情况下，标签页的前两个用户点击率较高，所以要将重要的信息放在前两个标签页。</p><h3 id="虚拟页面"><a href="#虚拟页面" class="headerlink" title="虚拟页面"></a>虚拟页面</h3><p>通过内置分页、滚动加载、等方式创建一个看起来很大的页面，而不用跳转页面。</p><p>虚拟页面的模式主要包括：虚拟滚动、内置分页、滚动分页、虚拟摇摄、伸缩式用户界面</p><p>这里我们主要来讲前两个：</p><h5 id="虚拟滚动"><a href="#虚拟滚动" class="headerlink" title="虚拟滚动"></a>虚拟滚动</h5><p>其实就是我们现在讲的瀑布流。用户可以通过滚动无限的看到内容，在一个页面内面内保证视觉连续性，查看更多的信息，比较典型的瀑布流：花瓣网、知乎。</p><p><img src="http://on20y2b5s.bkt.clouddn.com/%E8%8A%B1%E7%93%A3%E7%80%91%E5%B8%83%E6%B5%81.gif" alt=""></p><h5 id="内置分页"><a href="#内置分页" class="headerlink" title="内置分页"></a>内置分页</h5><p>其实就是翻页控件，让用户觉得不是页面切换而只是内容切换，这个太常见。</p><p>这里抛出一个问题：为什么淘宝、百度、谷歌不采用瀑布流？</p><p>首先对于淘宝这种电子商务网站采用瀑布流设计，我认为会很大程度的影响到购买成交量，因为用户会一直被无限的产品诱惑这不断滚动鼠标，而不愿意轻易点击，浩如烟海的产品虽然会让用户感觉到产品很丰富，但很快用户将意识到他很难做出选择，他们会认为最好的还在下面，这实际上破坏了用户的自我控制和选择的感受，反而会导致成交率下降。</p><p>因此，电子商务网站应放弃瀑布流布局设计，并要做好页面长度的控制，太长反而会让用户感到疲惫，并且，请为用户留下页码。</p><p>对于像百度和谷歌这中搜索引擎网站，据调查用户在首页找到相关内容就跳转走的概率是94%，只有6%的人会翻到第二页，另外用户使用搜索引擎是渴望快速找到自己想要的答案，而不是渴望看到更多的内容，还有就是分页可以帮助用户确定最佳搜索结果的位置，而瀑布流就不可以，用户再一次寻找最佳答案时，就会很懵逼。</p><p>对于内容的无限加载，有时也会让用户感觉过载，造成视觉疲劳，所以我比较喜欢简书的处理方式：3页瀑布流+1页分页，给用户选择的权利，简书还有个好处，就是可以在分页的状态的时候，看到页脚的信息…</p><h5 id="滚动分页-虚拟摇摄-伸缩式用户界面"><a href="#滚动分页-虚拟摇摄-伸缩式用户界面" class="headerlink" title="滚动分页 虚拟摇摄   伸缩式用户界面"></a>滚动分页 虚拟摇摄   伸缩式用户界面</h5><p>走马灯、google Maps的地图拖动、图片/页面等的放大缩小<br>前者用的比较多，后两者用的比较少</p><h3 id="流程处理"><a href="#流程处理" class="headerlink" title="流程处理"></a>流程处理</h3><p>前面几个话题讨论了足不出户原理的几种模式，长期以来，Web 实现流程的方式就是把每个步骤放在一个单独的页面上。虽然这种做法是分解问题最简单的方式，但并不是最佳解决方案。对于某些『流程处理』而言，让用户始终待在同一个页面上则更有必要。</p><p>下面来实际体验一下：亚马逊、淘宝、京东、天猫商城、天猫超市的购物体验：</p><ul><li><p>亚马逊购物流程<br><img src="http://on20y2b5s.bkt.clouddn.com/%E4%BA%9A%E9%A9%AC%E9%80%8A.gif" alt=""></p></li><li><p>淘宝购物流程<br><img src="http://on20y2b5s.bkt.clouddn.com/%E6%B7%98%E5%AE%9D.gif" alt=""></p></li><li><p>天猫商城购物流程<br><img src="http://on20y2b5s.bkt.clouddn.com/%E5%A4%A9%E7%8C%AB%E5%95%86%E5%9F%8E.gif" alt=""></p></li><li><p>天猫超市购物流程<br><img src="http://on20y2b5s.bkt.clouddn.com/%E5%A4%A9%E7%8C%AB%E8%B6%85%E5%B8%82.gif" alt=""></p></li></ul><p>从上我们可以看出，亚马逊、淘宝、京东 三个采用的流程是差不多，将流程步骤分页展示，这样用户购买多件商品的体验就像折返跑，体验不好，再看天猫商城和天猫超市采用了讲购物车设计成一个嵌入式部件，随时都可以往里添加商品，而不会中断用户的购买流程；哪种体验更好：当然是后者，但前者的分页流程也是有一定的好处，那就是可以通过推荐其他商品（附加步骤）来增加销售额。这样从业务角度和用户角度来看，天猫超市的设计是比较合理的。其次是天猫商城。</p><p>流程处理的方式不仅有交互式单页、嵌入式部件、还有弹出式的覆盖层，虽然这种方式会打乱用户的心流，但是有时候在弹出框中使用『步骤条』来管理复杂流程也是可行的。</p><h2 id="提供邀请"><a href="#提供邀请" class="headerlink" title="提供邀请"></a>提供邀请</h2><p>前面我们讲到的拖放、行内编辑、上下文工具以及其他交互模式，这些富交互模式都有一个共同的特点就是缺少易发现性，所以『提供邀请』是成功完成人机交互的关键所在。</p><p>邀请就是引导用户进入下一个交互层次的提醒和暗示，通常包括意符（eg：实时的提示信息）和可供性，以表明在下一个界面可以做什么。当可供性中可感知的部分（Perceived Affordance）表现为意符时，人机交互的过程往往更加自然、顺畅。</p><p>什么是意符和可供性呢？《设计心理学1》中给出了解释：</p><blockquote><p><strong>意符（Signifiers）</strong> ：一种额外的提示，告诉用户可以采取什么行为，以及应该怎么操作；必须是可感知（eg：视觉、听觉、触觉等）。——摘自《设计心理学 1 》<br><strong>可供性（Affordance）</strong> ：也被翻译成『示能』，由 James J. Gibson 提出，定义为物品的特性与决定物品用途的主体能力之间的关系；其中部分可感知（此部分定义为 Perceived Affordance），部分不可感知。——摘自《设计心理学 1 》</p></blockquote><p>意符：实时的提示信息<br>可供性：预期功能</p><p>可供性这个词最早是从物理世界里现象提出的，比如一把钥匙，它的可供性可感知的部分是能和锁匹配打开锁，不可感知的部门呢，我可以用它来开包裹，而它不可感知的部分，对于不同的人是不同的。</p><p>我们言归正传，提供邀请有两种模式：<strong>静态邀请和动态邀请</strong></p><h3 id="静态邀请"><a href="#静态邀请" class="headerlink" title="静态邀请"></a>静态邀请</h3><p>指通过可视化技术在页面上提供引导交互的邀请。</p><h5 id="引导操作邀请"><a href="#引导操作邀请" class="headerlink" title="引导操作邀请"></a>引导操作邀请</h5><p><strong>文本操作邀请</strong><br>就是以静态说明的形式出现在页面上，以引导用户进行操作。</p><ul><li style="list-style: none"><input type="checkbox"> 这里举例 Antdesign的例子</li></ul><p><strong>白板邀请</strong><br>将空白区域变废为宝，利用它来引导用户操作</p><ul><li style="list-style: none"><input type="checkbox"> 这里举例Antdesign</li></ul><p><strong>未完成邀请</strong><br>这个也很常见，比如 你没输入用户名，系统出现提示，邀请你重新填写用户名</p><h5 id="漫游操作邀请"><a href="#漫游操作邀请" class="headerlink" title="漫游操作邀请"></a>漫游操作邀请</h5><p>这个其实就是开始引导。保持漫游过程简单，让用户容易退出和重新启动；保持内容简明扼要，与功能密切相关。</p><ul><li style="list-style: none"><input type="checkbox"> 举例Antdesign</li></ul><h3 id="动态邀请"><a href="#动态邀请" class="headerlink" title="动态邀请"></a>动态邀请</h3><p>有时候用户不会阅读指导性的说明文字，所以就需要在用户与界面进行交互时 提供相应的操作邀请。<br>这里主要介绍三种模式：<strong>悬停邀请   推论邀请   更多内容邀请</strong></p><h5 id="悬停邀请"><a href="#悬停邀请" class="headerlink" title="悬停邀请"></a>悬停邀请</h5><p>在鼠标悬停期间发出邀请。</p><ul><li style="list-style: none"><input type="checkbox"> 此处举例淘宝热卖单品模块：悬停显示“去看看”按钮，用按钮这种熟悉的改变引导用户进入下一个交互层次。距离PMcaff的头像悬停</li></ul><h5 id="推论邀请"><a href="#推论邀请" class="headerlink" title="推论邀请"></a>推论邀请</h5><p>用于交互期间，合理推断用户可能产生的需求。<br>这个比较常见是搜索引擎里 用于纠正用户的错误失误，推测出用户可能要搜索的词，并给出链接邀请<br>推论邀请要慎用，因为如果过分揣测用户意图的话，也会给用户造成困扰</p><ul><li style="list-style: none"><input type="checkbox"> 此处举Antd的例子</li></ul><h5 id="更多内容邀请"><a href="#更多内容邀请" class="headerlink" title="更多内容邀请"></a>更多内容邀请</h5><p>这一类的处理方式有很多种，比如下面两个例子：<br>BANNER悬停出现的左右 箭头  还有漏一点边的照片</p><h2 id="巧用变换"><a href="#巧用变换" class="headerlink" title="巧用变换"></a>巧用变换</h2><p>待续…</p><p>最后编辑于2017年8月30日    by.盛召</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;webdesign/01.jpg&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;
&lt;p&gt;“例糙理不糙”&lt;br&gt;
    
    </summary>
    
    
      <category term="design" scheme="http://xdoupd.github.io/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>培养生活的仪式感——从Markdown开始</title>
    <link href="http://xdoupd.github.io/2017/08/03/Markdown01/"/>
    <id>http://xdoupd.github.io/2017/08/03/Markdown01/</id>
    <published>2017-08-03T10:53:00.000Z</published>
    <updated>2017-08-04T08:21:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="Markdown01/00.jpg" alt="00"><br>仪式感会给人一种重要的感觉<br><a id="more"></a></p><p>开始接触markdown是从今年三月份开始的，那时候用1个多月的时间自学搭建了hexo博客，但当时对markdown并没有什么概念，按照网上的教程：hexo new “passage” 在本地仓库生成一个 “passage.md”本地文件，当时不知道这就是markdown的文件，也是按照网上的教程下载了编辑软件MWeb，依旧是跟着教程来编写哪一块对应着文章标题，各个符号所对应的格式效果。后来才知道这是在用markdown来编写的，后来逐渐更博的过程中，对markdown逐渐有了了解。<br><br><img src="Markdown01/Mweb.png" alt="Mweb"></p><h3 id="初识Markdown"><a href="#初识Markdown" class="headerlink" title="初识Markdown"></a>初识Markdown</h3><p>Markdown顾名思义：mark 标记，down 写下来，是一种轻量级的标记语言。<br>他的创始人Jone Gruber这样说明markdown：</p><blockquote><p>Markdown是为网络书写者而生的方便“text-to-HTML”工具，它允许人们用一种易读易写的纯文本格式进行书写，然后将其转化为XHTML（或HTML）。Markdown的特点是“易读易写”，其中可读性是最重要的。一份使用Markdown格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown语法的目标是：成为一种适用于网络的书写语言。Markdown不是想要取代HTML，甚至也没有要和它更近，他的语法种类很少，只对应HTML标记的一小部分。Markdown的构想不是要使得HTML文档更容易书写。在我看来，HTML已经很容易写了。Markdown的理念是，能让文档更容易读、写和随意改。HTML是一种发布的格式，Markdown是一种书写的格式。就这样，Markdown的格式语法只涵盖纯文本可以涵盖的范围。<br>——John Gruber</p></blockquote><p>从John Gruber对markdown的说明中，可以看出markdown的一下几个特点：</p><ul><li>Markdown是一种轻量级的标记语言</li><li>markdown的特点是易读易写</li><li>markdown的内容与形式分离</li><li>markdown文档书写方式是源码书写，基本纯键盘输入</li><li>markdown文档是纯文本文档，意味着图片独立于文档之外</li><li>markdown是书写语言，不是发布语言，发布需要转换成html，</li></ul><p>实际上使用markdown来写博客，相对于word那种内容和形式融合的方式，markdown让我更加关注于写作本身，当然markdown还是有一定的学习成本的，虽然markdown的语法已经足够简单，但是当时你书写到需要的时候，刚接触markdown的人还是会去思考相应的标记符号是什么，但是一旦你对markdown语法熟悉了之后，那种写作时的行云流水会让你越来越爱这种写作方式的，至少我现在就慢慢有了这种感觉，再也不用拘泥于格式、字体、行间距等等一系列形式。还更加有利于在网站上的展示发布.相信后面的接触，会有更深入的了解。</p><p>最近一直在思考生活的仪式感这件事，就像前篇博文中提到的铃木俊隆的禅学思想：培养一种仪式感，仪式感会给人一种重要的感觉；而最近也在慢慢把写作培养成一种生活的仪式，因为写作既是记录，也是总结，是对自己的反省。工作生活中的琐事总是会不定时的打乱计划，让人手足无措，看似做了很多事情，实际上并没有完全做好每一件事，或许从写作开始，从markdown的写作方式开始，工作和生活会慢慢变得有仪式感，当仪式感成为一种习惯，或许对待工作生活的态度也会发生巨大的变化，我相信那是一种美好的变化，而我期待那个时刻的感觉到来。</p><p><strong>那么就从markdown开始吧</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;Markdown01/00.jpg&quot; alt=&quot;00&quot;&gt;&lt;br&gt;仪式感会给人一种重要的感觉&lt;br&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="http://xdoupd.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>行住坐卧，念兹在兹之电脑护理小记</title>
    <link href="http://xdoupd.github.io/2017/07/30/%E8%A1%8C%E4%BD%8F%E5%9D%90%E5%8D%A7%EF%BC%8C%E5%BF%B5%E5%85%B9%E5%9C%A8%E5%85%B9/"/>
    <id>http://xdoupd.github.io/2017/07/30/行住坐卧，念兹在兹/</id>
    <published>2017-07-30T06:11:46.000Z</published>
    <updated>2017-08-03T12:32:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="行住坐卧，念兹在兹/00.jpg" alt="00"></p><p>周末琐碎小记随想<br><a id="more"></a><br><strong>小记</strong><br>周末闲来无事，决定给电脑做个清洁护理，距离上次护理，过了有段时间了，屏幕和键盘上的灰着实积累了不少，打算给这两个家伙仔细打理打理。<br><img src="行住坐卧，念兹在兹/01.JPG" alt="01"><br>设备：13.3macbook air和13.3macbook pro 2016 with touchbar<br>工具：丹麦am护理套装、A4纸一张、小毛刷、牙签、台灯</p><p>清洁顺序：1.屏幕  2.键盘触摸板  3.先底后顶<br>之所以采用这个顺序，是因为mac在关机之后，开盖会自动开机，所以在关机清理时，要先清理里面；<br>1.屏幕：我倾向于先清理屏幕，用清洁喷雾喷洒一遍，然后用清洁布仔细擦拭一遍，用力要均匀一些，以免在屏幕上留下划痕，均匀擦拭两遍即可。<br>2.键盘触摸板：用清洁喷雾在3-5cm高度均匀喷下，这样可以避免近距离喷，键盘缝隙进水，键盘上的灰一般都是打字的时候留下的，长时间会板结在键盘上，合盖又会沾到屏幕上，影响屏幕显示效果，先大致擦拭一遍，然后在逐个键帽仔细擦拭，键盘之间的间隔区域也逐个擦拭一遍，键盘周围的缝隙，用小毛衰刷一遍，触摸板周围的缝隙，也用小毛刷刷一遍，<br>3.线底后顶：因为考虑到正反擦拭以及桌面的干净程度，所以采用先底后顶的顺序，这两面的清洁就很简单，用喷雾配合清洁布擦拭即可。电脑底部出风口可以使用牙签进行顽固清洁然后再用毛刷进行扫除。</p><p>两台电脑大概使用了40分钟的时间，清洁完毕。</p><p>之前的周末很少能沉下心来专心完成一件事，要么是睡觉，要么是游戏和电影，做的事情挺多，但杂而无序，过后如烟，</p><p><strong>随想</strong><br>想起前几天听冬吴一期《乔布斯的苹果禅》，影响乔布斯一生的日本禅师铃木俊隆的12条生活准则。<br>1.一次只专注于一件事情。当你行走时，专心行走；当你吃饭时，专心吃饭；<br>2.慢慢并谨慎地做事。一次完成一个任务，不能急，谨慎地注意你的行动，慢慢来；<br>3.彻底地完成它。彻底的完成一件事后，在进行下一件事情；<br>4.少做。少做能够保证专注和彻底的完成；<br>5.在事情之间留些空间。日程管理中，在事情之间留有空间；<br>6.培养一种仪式感。仪式会给人一种重要的感觉；<br>7.为特定的事情分配好时间。保证每件事情都彻底的有规律的完成；<br>8.花些时间在打坐上。给自己静坐冥想的时间；<br>9.微小和服务他人。改善你周围人生活的一种很好的方法；<br>10.把清洁和烹饪变成冥想。把一些琐碎的杂务充满仪式感的彻底完成；<br>11.思考什么是必须的。去除生活中很多不必要的东西，思考我们真正需要的是什么；<br>12.简单生活。尽可能地处理掉那些没有必要的，为生命中重要的事情留出空间；</p><p>行住坐卧念兹在兹，专心做完一件事，享受这件事的整个过程，工作如此，生活亦须如此。</p><p>前两年的此时，还在努力搞着快骑的创业项目，也是差不多30多度的温度，确是热情高涨的和前来参加活动的朋友们骑行在路上，晒得黝黑，大汗淋漓。</p><p>用40分钟护理电脑，用10几个小时骑完170公里，安心的写完这篇博客，我享受完成这些事情后内心的充实，或许这就是我应该认真去感受生活的态度。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;行住坐卧，念兹在兹/00.jpg&quot; alt=&quot;00&quot;&gt;&lt;/p&gt;
&lt;p&gt;周末琐碎小记随想&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WEB界面设计</title>
    <link href="http://xdoupd.github.io/2017/06/13/WEB%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/"/>
    <id>http://xdoupd.github.io/2017/06/13/WEB界面设计/</id>
    <published>2017-06-13T14:30:28.000Z</published>
    <updated>2017-08-03T12:31:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="WEB界面设计/00.jpg" alt="00"><br>WEB界面所依托的6个设计原理：直截了当、简化交互、足不出户、提供邀请、使用变换、即时反应。<br><a id="more"></a><br>蚂蚁金服设计的antd设计语言所遵循的也是这6个web界面设计原理  </p><h6 id="原理一：直截了当"><a href="#原理一：直截了当" class="headerlink" title="原理一：直截了当"></a><strong>原理一：直截了当</strong></h6><p>需要在哪里输出，就要允许在哪里输入</p><p><strong>一.页内编辑：单字段行内编辑、多字段行内编辑、覆盖层编辑</strong></p><p><strong>1.单字段行内编辑：</strong>编辑操作发生在原处而不是单独的窗口或者单独的页面</p><p>1.1 当 <em>易读性</em> 远比 <em>易编辑性</em> 重要时，可以使用单字段行内编辑，即在用户与内容进行交互时再给出可以编辑的提示</p><p>考虑到这种交互方式的易发现性，这种交互方式应具备以下三种提示：<br>显示工具提示条、以黄色背景（或者其他颜色）突出显示可编辑区域、把光标修变成小手；<br>这种交互方式的缺点是易发现性较差，只有当用户把鼠标停留在标题上之后，这些提示才会出现；</p><p>【示例】<br><img src="WEB界面设计/01" alt="01"><br>1.2 当需要突出操作行的 <em>易编辑性</em> 时，可使用 文字链/编辑图标</p><p>这种交互方式的优点是具有易发现性，缺点是每添加一个编辑链接，都会涉及到页面的平衡和视觉干扰问题，同时也会增加理解理解页面的难度。而且如果功能及其提示在页面中的数量过多，很有可能造成功能的利用率下降。（即页面中放置了10个编辑链接，而每次被使用到的却只有1个，导致其余9个链接白白占据了页面空间，利用率却非常低下。）</p><p>【示例】<br><img src="WEB界面设计/02" alt="02"><br><br><br><strong>易访问性</strong><br>由于行内编辑的隐性交互，导致其缺乏易访问性，即对于一些特殊群体，如肢体残疾、行动不便、视力不好及有其他生理疾病的用户在通过援助性技术访问网页时，也不会轻易发现这个行内编辑功能。</p><p>从某种意义上来说，依赖于鼠标发现功能也会妨碍某些用户使用行内编辑。综上所述，加显性的编辑链接，有助于用户发现功能，同时也能提升功能的易访问性。</p><p>有关易访问性的定义<br>网站易访问性研究：<a href="http://blog.csdn.net/delez/article/details/1778941" target="_blank" rel="noopener">http://blog.csdn.net/delez/article/details/1778941</a><br>WIPO世界知识产权组织对网站易访问性的定义：<a href="http://blog.csdn.net/delez/article/details/1778941" target="_blank" rel="noopener">http://blog.csdn.net/delez/article/details/1778941</a></p><p><strong>2 多字段行内编辑</strong>  交互同单字段行内编辑，不同区别在于多字段为多个编辑项</p><p><strong>2.1 多字段行内编辑示例</strong><br>【示例】<br><img src="WEB界面设计/03" alt="03"><br><br><br>“状态4为编辑保存后，为了表明新标题和内容已替换，注释背景变成黄色。几秒钟后，黄色淡出为正常的背景颜色”<br><br><br>【示例2】<br><img src="WEB界面设计/04" alt="04"><br><br><br><strong>2.2 易读性与易编辑性</strong><br>考虑易读性，视情况为用户提供如下组件：<br>编辑控件<br>字段提示<br>辅助用户输入的帮助文本<br>错误处理<br>援助性输入（例如 下拉菜单、日历选择控件）<br>编辑样式</p><p>以上行内编辑可以保持编辑时不脱离页面其他元素，以便获取到相应的编辑信息帮助</p><p><strong>3 覆盖层编辑</strong><br>当上下文对编辑任务不那么重要时；当编辑任务很复杂，不可能安排在同一个页面完成时；当嵌入页面的编辑区域过大，会导致页面整体下移过多，损害整体感时；可以选择中断当前页面信息流，利用一个轻量级的覆盖层为用户提供一个明确且充足的编辑空间。</p><p>【示例1】<br><img src="WEB界面设计/05" alt="05"><br><br><br><strong>使用覆盖层时应该考虑如下因素</strong><br>编辑模块明显比显示结果大的多<br>在页面中为编辑模块开辟一块地方会导致重要信息被推向页面下方<br>展开后的编辑模块可能会有一部分伸到可见范围之外，而覆盖层可以保证编辑模块完全可见<br>用户不会频繁编辑内容<br>被编辑的项是一个整体，在编辑一组数据项时，不应该让覆盖层遮住类似的数据项。这样用户在编辑过程中，可以参照其他的项</p><p><strong>行内编辑和覆盖层编辑的最佳实践</strong><br>对单个字段使用行内编辑<br>当编辑多个项中的一个时使用行内编辑，这样可以保持视图中的上下文<br>尽可能保证显示和编辑模式的大小相同，这样可以避免页面抖动，同时减少两个模式间的切换对用户造成的干扰<br>尽可能让显示和编辑模式的切换平滑而连续<br>在主要考虑易读性时，通过鼠标悬停邀请用户编辑<br>不要让用户通过双击切换至编辑模式<br>如果用户频繁编辑某个项的可能性比较大，可以在被编辑的项旁边放一个[编辑]链接，这样既可以从视觉上区分显示的文本和链接，又不至于分散用户的注意力<br>在编辑系列中的某一项时，应该在原地显示编辑链接，以便保持上下文<br>如果需要用户更过的关注被编辑的项时，可以使用覆盖层，这样可以消除意外修改关键值的可能性<br>不要针对多个字段创建多个覆盖层，如果想通过复杂的表单编辑一系列元素，应该使用一个覆盖层<br>在使用覆盖层时，尽量使用最轻量级的样式<br>如果使用隐性的提交编辑结果不够明显，可以使用按钮<br>在空间允许的情况下，要让用户通过按钮来保存和取消编辑<br>只要可能就要允许用户拖动覆盖层，以便看到被遮住的内容<br><br><br><strong>4 表格编辑</strong><br>向Excel的使用习惯保持一致<br><br><br><strong>5 群组编辑</strong><br>苹果的长按图标，抖动后可以进行群组编辑，在一定程度还是很直观的，但是其触发群组编辑模式和退出该模式的操作却不一样，这这就造成用户退出编辑模式时的不方便，也在一定程度上违背了对称性交互原则。</p><p>对称性交互原则：<br>进入和退出编辑模式通常应该采用同样的交互风格，这样才有助于发现相反的操作，这就是对称性交互原则</p><p>群组编辑中应当尽量遵循对称性交互原则</p><p>【示例】<br><img src="WEB界面设计/06" alt="06"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;WEB界面设计/00.jpg&quot; alt=&quot;00&quot;&gt;&lt;br&gt;WEB界面所依托的6个设计原理：直截了当、简化交互、足不出户、提供邀请、使用变换、即时反应。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读书笔记01丨《落差》</title>
    <link href="http://xdoupd.github.io/2017/03/31/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B001%E4%B8%A8%E3%80%8A%E8%90%BD%E5%B7%AE%E3%80%8B/"/>
    <id>http://xdoupd.github.io/2017/03/31/读书笔记01丨《落差》/</id>
    <published>2017-03-31T07:10:05.000Z</published>
    <updated>2017-08-03T07:00:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="读书笔记01丨《落差》/DS01.jpg" alt="落差01"></p><blockquote><p>本书和作者<br>本书是白宫“总统心理健康委员会”指定心理读物。也是一本致力于帮助人们走出负面情绪困扰的心理自助书。它将帮助你直面由落差带来的负面情绪，告诉你大脑的运作原理，你将学会一系列心理学技巧，从而化解负面情绪重新找到自我。<br><a id="more"></a><br>作者是米歇尔·勒朱瓦耶，法国著名的心理学专家。他不仅是巴黎的七大精神分析专家成员之一，而且还在美国担任白宫的心理治疗师，是白宫“总统心理健康委员会”的重要成员，参与过百余次国内及国际心理项目研究，其内容主要涉及人类日常行为的社会、心理及生物学决定因素，著有《让个性、工作、爱情、头脑变得更好》等畅销作品。</p></blockquote><p><strong>本书主要内容</strong><br>第一、绝大多数的负面情绪都来自于假烦恼；</p><p>第二、要避开负面情绪，首先要了解大脑的工作原理；</p><p>第三、化解负面情绪的技巧是什么？需要改变的思维方式有哪些？</p><p><strong> 第一、绝大多数的负面情绪都来自于假烦恼  </strong><br>1、负面情绪不一定都带来烦恼</p><p>面对负面情绪，有的人却能不受负面情绪的影响，甚至反而能够将其转化为灵感。比如有些诗人、作家。</p><p>但是绝大多数人做不到的原因在于，陷入了由负面情绪带来的“假烦恼”。</p><p>2、区分真假烦恼</p><p>真烦恼：客观事实存在的烦恼，也就是正在面临的问题所直接带来的烦恼。</p><p>假烦恼：在真烦恼的问题发生之后，我们内心对此又产生新的解读和感受，而进一步带来的烦恼。</p><p>战胜负面情绪的第一步，首先要消除那些原本就不应该存在的负面情绪，那就是区分真假烦恼，先把由假烦恼带来的问题消灭掉。</p><p><strong>第二、化解负面情绪，首先要了解大脑的工作原理</strong><br>1、大脑的铃铛模式</p><p>对大脑的最新研究发现，大脑中间有一个小球，会向各个方向摇动，就像是铃铛内部的小锤，所以看起来大脑就像一个铃铛一样。这个小球部分，在医学上或解剖学上称为脑部扁桃体或大脑边缘系统。</p><p>情绪脑：主要受大脑边缘系统控制，负责正面和负面的情绪。</p><p>理性脑：主要在大脑新皮层区域，负责理性思考、推理分析。</p><p>2、大脑的“推拉系统”</p><p>大脑负责情绪和负责理性的这两部分区域，是不能同时工作。感动的时候就会失去理智，思考的时候会不动感情，生物学家把这种现象称作为大脑的“推拉系统”。</p><p>所谓推：即大脑把情绪往内推，让大脑边缘系统的“情绪脑”起作用，会让我们容易感动。</p><p>所谓拉：即大脑将感受、事件等拉到大脑新皮层区域，让“理性脑”起作用，让我们思考，从而让“情绪脑”平静下来。</p><p>案例：证明推拉系统存在的心理学实验</p><p>3、正向利用和反向利用</p><p>利用大脑的运作模式，情绪控制可分为正向利用和反向利用。</p><p>正向利用：在需要进行美好情绪体验的时候，不去想任何需要调动理性逻辑分析的事情。比如在听话剧、看电影或欣赏一幅绘画名作的时候。</p><p>反向利用：在情绪化的时候，让自己理性思考，或处理一些需要调用逻辑能力的事情，那么就能够更好地控制自己的负面情绪。</p><p><strong>第三、化解负面情绪的技巧和需要改变的思维方式</strong><br>作者提供了很多武器工具和方法</p><p>1、用思维阻断，打破惯性思维</p><p>事情和坏情绪之间不一定有必然联系，负面情绪的产生其实是惯性思维导致的。</p><p>要应对负面情绪，就要打破由负面情绪带来的思维定势，去建立新的正面的情绪连接。</p><p>2、用“疑惑十字符”，多角度思考</p><p>陷入到负面的情绪时，会放大自己的缺点或者事情的严重性，而不能很客观、全面地看待问题。比如：非常典型的现象“房间里的大象”</p><p>疑惑十字符：是一个四象限，在横轴的右端，是指生活中的成功，在横轴的左端，是指生活中的失败，而纵轴的上端是指有很多缺点和错误，纵轴的底部，指没有任何缺点和错误。</p><p>疑惑十字符告诉我们，生活不是只有一个维度，事情是由各种多元的因素决定的，要跳出由负面情绪带来自我解读，就要运用这种多角度更客观的视野，去全面的理解事实的真相。</p><p>3、寻找健康积极的自恋情绪</p><p>多试着去寻找自己的优点，多肯定自己，会带来积极的心理状态，对化解负面情绪有积极的意义。</p><p>比如：爱自拍的人比较容易从负面情绪中走出来。</p><p>4、解决问题的五步法</p><p>通过思考问题的五个处理步骤，能够帮助我们从负面情绪中走出来。</p><p>定义问题 寻找尽可能多的解决方案 找出最可行的方案 制定可执行的步骤 付诸实践并检测效果</p><blockquote><p><strong>本书金句</strong><br>1、人类内心绝大多数的负面情绪，都来源于心理落差。</p></blockquote><p>2、失望能让我们心碎，也能为我们带来自我实现的力量。请相信，凡是能让你失望的，都是你需要学会面对和超越的。</p><p>3、我们不会被事件所影响，但会被事件所带来的感受所影响。</p><p>4、我们的大脑是真正好心情的制造机器，只不过我们还没有使用说明书。</p><p>5、我们从来都抵触面对消极情绪，但我们也总有能力用思考和理性处理负面情绪。</p><p>6、你无法制止抑郁的小鸟从你头顶飞过，但你可以制止它们在你的头上筑巢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;读书笔记01丨《落差》/DS01.jpg&quot; alt=&quot;落差01&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本书和作者&lt;br&gt;本书是白宫“总统心理健康委员会”指定心理读物。也是一本致力于帮助人们走出负面情绪困扰的心理自助书。它将帮助你直面由落差带来的负面情绪，告诉你大脑的运作原理，你将学会一系列心理学技巧，从而化解负面情绪重新找到自我。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>配置网易云跟帖评论系统</title>
    <link href="http://xdoupd.github.io/2017/03/25/%E9%85%8D%E7%BD%AE%E7%BD%91%E6%98%93%E4%BA%91%E8%B7%9F%E5%B8%96%E7%B3%BB%E7%BB%9F/"/>
    <id>http://xdoupd.github.io/2017/03/25/配置网易云跟帖系统/</id>
    <published>2017-03-25T06:55:12.000Z</published>
    <updated>2017-03-25T09:16:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="配置网易云跟帖系统/04.jpg" alt="04"><br>2017年3月21日，多说官方宣布：多说即将关闭。<br><a id="more"></a><br><img src="配置网易云跟帖系统/05.png" alt="05"></p><p>一时间，周遭的朋友都在一边缅怀曾经评论系统界的老大哥，叹英雄气短，一边都在寻找其替代的评论系统；我的博客最先接入的也是多说评论系统，多说评论功能齐全，支持游客评论等，但是缺点就是服务器不稳定，经常加载不错，也是又爱又恨。如今多说宣布关闭，我也开始寻找其替代者。</p><p>对于我这个个人博客来说，刚起步，所以对评论系统的要求也并不是特别高，先前试用了友言，也基本符合我的要求，但功能太单一；也去尝试了搜狐的畅言评论系统，注册过程中，要求网站进行备案，备案还需要购买服务器，直接放弃；于是最终决定选择网易云跟帖。</p><p>Hexo/Next安装云跟帖系统的过程也是相对比较简单的。</p><p>1.注册云跟帖，获取通用代码</p><p><img src="配置网易云跟帖系统/01.png" alt="01"></p><p>2.打开next/layout/_partials/comments.swig,将通用代码复制进去。</p><p><img src="配置网易云跟帖系统/02.png" alt="02"></p><p>3.保存部署。效果如下：</p><p><img src="配置网易云跟帖系统/03.png" alt="03"></p><p>对于云跟帖的优缺点，后续会在体验一段时间后补充完成。至少现在能满足评论的基本功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;配置网易云跟帖系统/04.jpg&quot; alt=&quot;04&quot;&gt;&lt;br&gt;2017年3月21日，多说官方宣布：多说即将关闭。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Macbook Pro和Mac OS四个月后的体验感受</title>
    <link href="http://xdoupd.github.io/2017/03/23/%E4%BD%BF%E7%94%A8Macbook-Pro%E5%92%8CMac-OS%E5%9B%9B%E4%B8%AA%E6%9C%88%E5%90%8E%E7%9A%84%E4%BD%93%E9%AA%8C%E6%84%9F%E5%8F%97/"/>
    <id>http://xdoupd.github.io/2017/03/23/使用Macbook-Pro和Mac-OS四个月后的体验感受/</id>
    <published>2017-03-23T07:54:23.000Z</published>
    <updated>2017-08-20T09:40:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="使用Macbook Pro和Mac OS四个月后的体验感受/02.jpg" alt="02"><br>刚毕业那会，就一直想拥有自己的一台Mac，那个时候对Mac的向往是因为它惊艳的外观设计以及耳闻的好用的Mac OSX系统，可能装逼成分还是占其中一部分的，去年九月份，从大二开始一直服役了五年整的联想Y460，终于不堪重负，硬盘和显卡坏掉，也是鞠躬尽瘁死而后已，于是终有机会入手人生中的第一台Mac。去年十月底苹果发布了16版的Macbook pro，我也在第一时间预定购买了，到今天为止，使用Mac四个多月，Mac对我工作起到了很大的帮助。<br><a id="more"></a></p><p>我很少粉什么，也没有什么偶像，但是对于Mac，我从来不掩饰我对它的喜爱，不仅因为它精湛的工艺和设计，还因为它的操作系统，也就是Mac OS。接下来，我会几段文字来描述我喜欢它的原因。</p><p>我从大二那会，大概五年的时间，一直用的是windows，和以前用Windows的经历相比，我每天的工作、学习、生活娱乐，不仅可以在Mac OS下全部完成，而且还能节约20%甚至更多的时间。Mac OS 反应更快，界面更简洁，把软件不常用的功能全部隐藏，却很容易找到，软件界面十分简洁优雅，很多软件设计的十分人性化，后面我也会介绍一些我使用Mac的过程中使用过的非常好的软件；使用Mac OS过程中，很少出现卡顿，基于最新技术的SSD技术，传输和存储速度非常快，平均2G左右的文件1分钟可以传输完，这无形中也提高了办公效率，再者是，在Mac上不会出现各种弹窗、补丁、杀毒等等浪费时间的操作，让你能专注于工作内容，很多流氓软件，到Mac OS下都必须重新设计，而且绝没有弹窗广告，可见苹果在这方面的把关程度。</p><p>Mac还有很多很多地方值得称赞的地方，我写一些使用感受。</p><h3 id="关于关机"><a href="#关于关机" class="headerlink" title="关于关机"></a>关于关机</h3><p>记得在《乔布斯传》写到，乔布斯认为完全没必要专门设定这样一个流程：按下去—等待关机—再见。还记得《乔布斯传》的结尾，写了这样一个故事：</p><p>一个阳光灿烂的下午，他感觉不太舒服，他坐在屋后的花园里，思考死亡。他谈到将近40年前他在印度的经历，他对佛法的研习，以及他对转世和精神超越的看法。“我对上帝的信仰是一半一半。”他说，“我一生中的大部分时间，都认为一定有超出我们所见的存在。”</p><p>他承认，当他面临死亡时，他可能更愿相信存在来世。“我愿意认为，在一个人死后有些什么东西依然存在。”他说，“如果你积累了所有这些经验，可能还有一点智慧，然后这些就这么消失了，会有些怪怪的。所以我真的愿意相信，会有些什么东西留存下来，也许你的意识会不朽。”</p><p>他沉默了很长时间。“但是另一方面，也许就像个开关一样。”他说，“啪！然后你就没了。”</p><p>他又停下来，淡然一笑。“也许这就是为什么我从不喜欢给苹果产品加上开关吧。</p><p>读了这段故事，应该了解到Mac其实可以一直不关机的哦，即开即用。</p><h3 id="关于游戏"><a href="#关于游戏" class="headerlink" title="关于游戏"></a>关于游戏</h3><p>周围的朋友说买Mac就基本告别游戏了，确实，Mac上是不支持一些主流游戏的，比如LOL、炉石传说等，但Mac上也不乏一些优秀的游戏，比如：使命召唤、魔兽、暗黑等，这些都是有Mac版的，而且这些游戏在Retina屏幕上的视觉效果，绝对甩开Windows几条街。有些主流游戏，没有Mac版，这并不能说明什么，开发商也是根据用户群体和商业角度考虑做哪些平台的版本的；我在我的Macbook Pro上装了三款游戏：《This war of mine》生存类、《银河历险记》揭秘探索类、《梦想小镇》模拟经营类，还是三款口碑不错的单机，用来闲暇时光放松还是挺不错的。如果是Macbook不建议装大型游戏，毕竟在在Mac上玩这些烧显卡的游戏，你难道不心疼吗？</p><h3 id="关于软件"><a href="#关于软件" class="headerlink" title="关于软件"></a>关于软件</h3><p>Mac OS最大的价值就是提升效率，所以Mac上很多软件都是为提升工作效率而生的，很多我们常用的软件Mac版也都做了很好的优化，我平时也喜欢倒腾和淘软件，下面是我的一些个人推荐和建议。</p><ul><li>浏览器的话，我是主Chrome  辅Safari，这个看个人喜好；</li><li>输入法推荐搜狗，词库和联想都很不错；</li><li>解压缩软件有很多，苹果自带zip解压缩，其他格式的解压缩我这里推荐：Archiver</li><li>任务管理类推荐：Doo，手势操作完成、待完成等十分方便</li><li>清单类自不必说：奇妙清单</li><li>Mac上本可以不用装杀毒软件或者360这种软件，当然也有这一类的比较优秀的软件：如Clean My Mac，还可以帮你检测内存等</li><li>电脑搜索，很多人推荐Alfred，其实Mac自带的Spotlight也很不错</li><li>PDF编辑/阅读推荐PDF Expert</li><li>设计类的当属Adobe全家桶、Sketch、Axure Rp等，Mac上还有很多优秀的设计软件这里不做赘述</li><li>Mac上还有一些可以让你屏蔽周围声音的白噪音软件如：Noizio，沉浸感十足</li><li>RSS订阅软件推荐Reeder</li><li>图片压缩软件推荐photo size optimizer</li><li>平时写东西喜欢用印象笔记</li><li>装个Snap，可以给你电脑的软件编辑快捷键，这个软件极力推荐，能极大的提高效率</li><li>Mac触摸板手势交互非常丰富，能极大的提高工作效率，我平时做原型设计以及一些简单的视觉基本不用鼠标</li><li>Beautifui Earth是一个非常好玩的壁纸应用，不过要翻墙才可以使用，它是把地球的很多地方的高清卫星地图当做你的壁纸，非常棒的一款壁纸软件</li><li>cheatsheet是一个很好玩的应用，装上后，你在任意软件下，长按command键，就会显示出当前软件的所有快捷键</li><li>同一个办公室或近距离的两台Macbook或者iPhone可以使用Airdrop来传输文件，速度非常快</li><li>思维导图软件推荐mindnode</li><li>邮件软件推荐Spark</li><li>音乐软件 你懂的，网易云音乐</li><li>文档类的首推苹果自带pages、keynote等，若考虑协同,office系列也是有Mac版的</li><li>Magnet是一个窗口管理工具，可以帮你实现像windows一样，鼠标拖动窗口到桌面四周全屏/半屏/四分之一屏等</li><li>Mac默认三指轻点可以查询单词翻译等，不过还不是很完善，有时候会查不到<br>关于软件，先介绍这么多，稍后有更优秀的软件，还会继续补充。</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>可以花钱买一个VPN，毕竟花了钱的会稳定一些，墙外的世界更精彩</li><li>买Macbook时，建议内存升到16G，这样会保证在工作过程中不会提示你内存不足，而选择去关闭一些应用，影响当前工作的效率</li><li>我本人使用的是16款的Macbook Pro，这款电脑刚发布时，很多人Touch bar不好用，鸡肋，使用了这么久之后，F1-F12我还真没用过几次，当然了，肯定是有常用的人，Touch Bar也是支持设定为F1-F12模式的；现在越来越多的软件都在兼容Touch bar，实际使用过程中，有些快捷操作还是很方便的</li><li>自学一些编程，当然这和Mac并没有太大关系，也是为了拓展自己的思维和视野吧</li></ul><p>Mac越来越成为我工作和生活中不可或缺的部分，我也希望能和它一起去打造一个更高效的工作生活。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;使用Macbook Pro和Mac OS四个月后的体验感受/02.jpg&quot; alt=&quot;02&quot;&gt;&lt;br&gt;刚毕业那会，就一直想拥有自己的一台Mac，那个时候对Mac的向往是因为它惊艳的外观设计以及耳闻的好用的Mac OSX系统，可能装逼成分还是占其中一部分的，去年九月份，从大二开始一直服役了五年整的联想Y460，终于不堪重负，硬盘和显卡坏掉，也是鞠躬尽瘁死而后已，于是终有机会入手人生中的第一台Mac。去年十月底苹果发布了16版的Macbook pro，我也在第一时间预定购买了，到今天为止，使用Mac四个多月，Mac对我工作起到了很大的帮助。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客记录贴</title>
    <link href="http://xdoupd.github.io/2017/03/19/%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%E8%B4%B4/"/>
    <id>http://xdoupd.github.io/2017/03/19/博客记录贴/</id>
    <published>2017-03-19T06:47:19.000Z</published>
    <updated>2017-03-21T02:06:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="博客记录贴/02.jpg" alt="02"><br>搭建自己的博客是希望能有一个独立的、干净的一个地方用来写字，如此，经历了大半个月，也终于把自己的博客搭建了起来，对我这个不太懂代码的人来说，跟着网上的教程走，过程也是一波三折，不过最终还是很好的完成了这个“项目”，也在此对过程进行一次小总结。<br><a id="more"></a></p><blockquote><p><strong>设备环境</strong></p></blockquote><p>Macbook pro Late 2016<br>macOS Sierra 10.12.3<br><br></p><blockquote><p><strong>独立域名+Github page</strong></p></blockquote><ul><li>域名购买建议去godaddy 或者gen.xyz等国外服务商，这样可以免去国内的实名认证和备案过程</li><li>采用hexo+github的方式来建立博客，可以不用购买服务器，国内的服务器一般租金为¥60/月，还是很贵的<br><br></li></ul><blockquote><p><strong>hexo框架安装</strong></p></blockquote><ul><li>安装hexo过程中，命令行前面要加sudo，授予权限，否则会报错<br><code>sudo npm install hexo-cli -g</code></li><li>本地根目录文件夹名称建议命名为：你的用户名.github.io</li><li>本地根目录文件夹路径建议为全英文，我之前是将根目录建在”下载“里，结果hexo init 不进去，老是报错，后将目录建在Macintosh HD下hexo init成功。<img src="博客记录贴/01.png" alt="01"></li><li>hexo d 如果出错，删除本地根目录隐藏文件夹_deploy.git后，再hexo d<br><br></li></ul><blockquote><p><strong>绑定域名</strong></p></blockquote><ul><li>本地根目录source文件夹下新建CNAME 无后缀名文件，网上教程说内容填写为xxxx.com（你购买的域名去除www.），我测试后无法访问，后改成<a href="http://www.xxxx.com" target="_blank" rel="noopener">www.xxxx.com</a>, 可访问；测试二级域名也可访问</li></ul><p><br></p><blockquote><p><strong>搭建过程记录</strong></p></blockquote><p><strong>2017.3.19</strong></p><ul><li>更新博客头像</li></ul><p><strong>2017.3.18</strong></p><ul><li>创建关于页面，内容暂定为简历文字部分</li><li>博客接入友言评论系统</li></ul><p><strong>2017.3.17</strong></p><ul><li>完成框架页面基础展示信息：标题、头像等</li><li>移植原简书文章“PPT动画设计案例1”，并解决页面图片显示问题</li></ul><p><strong>2017.3.16</strong></p><ul><li>历时18天，完成hexo+github+next/theme的个人博客基础搭建</li></ul><p><strong>2.17.2.26</strong></p><ul><li>从0开始着手hexo+github博客的搭建</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;博客记录贴/02.jpg&quot; alt=&quot;02&quot;&gt;&lt;br&gt;搭建自己的博客是希望能有一个独立的、干净的一个地方用来写字，如此，经历了大半个月，也终于把自己的博客搭建了起来，对我这个不太懂代码的人来说，跟着网上的教程走，过程也是一波三折，不过最终还是很好的完成了这个“项目”，也在此对过程进行一次小总结。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一个交互设计师的博客</title>
    <link href="http://xdoupd.github.io/2017/03/19/%E4%B8%80%E4%B8%AA%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%B8%88%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://xdoupd.github.io/2017/03/19/一个交互设计师的博客/</id>
    <published>2017-03-19T06:09:55.000Z</published>
    <updated>2017-03-19T06:11:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里是盛召的博客</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里是盛召的博客&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PPT动画设计案例1</title>
    <link href="http://xdoupd.github.io/2016/09/09/PPT%E5%8A%A8%E7%94%BB%E8%AE%BE%E8%AE%A1%E6%A1%88%E4%BE%8B1/"/>
    <id>http://xdoupd.github.io/2016/09/09/PPT动画设计案例1/</id>
    <published>2016-09-09T13:51:53.000Z</published>
    <updated>2017-03-17T02:06:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>九月，学生陆续都开了学，校门口的龙虾大排档也逐渐热闹起来，想想马上十一小长假，远方的朋友回来又可以喝酒撸串吹牛逼，也是一件爽事。</p><p>言归正传，说会PPT</p><p>PPT动画一直游离于演示界的边缘地带，作为一个PPT动画设计的爱好者，每次在做PPT之前，都会在脑海中去构想整个PPT的大纲及转场，一个流畅的转场，能让观众的视线更加的聚焦与赏心悦目，同时也能使演讲者更加自信，后续的文章，我会陆续探索好玩的转场动画，并将设计过程总结于此，记录与共勉：</p><p>近期公司在搞职级职等评审，就借这个案例，分享一个开头转场动画的设计：</p><p>场景：开场 — 自我简介 — 目录</p><p>设计草图脚本：<br><img src="PPT动画设计案例1/01.jpg" alt="01"></p><p>因为有头像（个人信息展示）以及后面的三个主目录也可以用圆形去表现，所以决定用圆形元素来串联整个转场</p><p>最终效果（x2速度）<br><img src="PPT动画设计案例1/02.gif" alt="02"></p><p>转场重点：小圆无级放大到大大圆，今进而实现无视觉差转场</p><hr><h5 id="步骤解析"><a href="#步骤解析" class="headerlink" title="##步骤解析"></a>##步骤解析</h5><p>场景1：标题+两个神秘的小圆（小圆：我是有准备来的），这样的排版和页面元素并不会让人感觉很突兀和奇怪<br><img src="PPT动画设计案例1/03.png" alt="03"></p><p>场景1转场：效果及步骤动画如下<br><img src="PPT动画设计案例1/04.gif" alt="04"><br><img src="PPT动画设计案例1/05.png" alt="05"><br><img src="PPT动画设计案例1/06.jpg" alt="06"></p><p>场景1转场到场景2：小圆无级放大到大圆再出现个人信息<br><img src="PPT动画设计案例1/07.gif" alt="07"><br><img src="PPT动画设计案例1/08.jpg" alt="08"></p><p>（Nordri Tool 是一个PowerPoint插件，推荐下载按安装）</p><p>上面动画中，重点在于，左右两个小圆碰撞后消失，中间小圆出现，然后中间小圆无级放大</p><p>场景2转场场景3：头像、个人信息，底层圆角矩形消失，头像下大圆路径移动到中心，引出其余两个圆和目录标题<br><img src="PPT动画设计案例1/09.gif" alt="09"><br><img src="PPT动画设计案例1/10.jpg" alt="10"></p><p>工作简述路径运动到中间动画，因为考虑到好几个元素的运动，所以放到第二张PPT上进行设计<br><img src="PPT动画设计案例1/11.jpg" alt="11"></p><p>以上即为全部脚本的动画拆解，于此记录；总体效果如下：<br><img src="PPT动画设计案例1/12.gif" alt="12"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;九月，学生陆续都开了学，校门口的龙虾大排档也逐渐热闹起来，想想马上十一小长假，远方的朋友回来又可以喝酒撸串吹牛逼，也是一件爽事。&lt;/p&gt;
&lt;p&gt;言归正传，说会PPT&lt;/p&gt;
&lt;p&gt;PPT动画一直游离于演示界的边缘地带，作为一个PPT动画设计的爱好者，每次在做PPT之前，都会
      
    
    </summary>
    
    
      <category term="PPT设计" scheme="http://xdoupd.github.io/tags/PPT%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
</feed>
